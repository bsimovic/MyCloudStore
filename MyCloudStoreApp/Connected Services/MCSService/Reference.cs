//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyCloudStoreApp.MCSService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StoredFile", Namespace="http://schemas.datacontract.org/2004/07/MyCloudStoreSvc")]
    [System.SerializableAttribute()]
    public partial class StoredFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string filenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                if ((object.ReferenceEquals(this.filenameField, value) != true)) {
                    this.filenameField = value;
                    this.RaisePropertyChanged("filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hash {
            get {
                return this.hashField;
            }
            set {
                if ((object.ReferenceEquals(this.hashField, value) != true)) {
                    this.hashField = value;
                    this.RaisePropertyChanged("hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int size {
            get {
                return this.sizeField;
            }
            set {
                if ((this.sizeField.Equals(value) != true)) {
                    this.sizeField = value;
                    this.RaisePropertyChanged("size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MCSService.IMCSService")]
    public interface IMCSService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Register", ReplyAction="http://tempuri.org/IMCSService/RegisterResponse")]
        void Register(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Register", ReplyAction="http://tempuri.org/IMCSService/RegisterResponse")]
        System.Threading.Tasks.Task RegisterAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/LogIn", ReplyAction="http://tempuri.org/IMCSService/LogInResponse")]
        string LogIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/LogIn", ReplyAction="http://tempuri.org/IMCSService/LogInResponse")]
        System.Threading.Tasks.Task<string> LogInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/List", ReplyAction="http://tempuri.org/IMCSService/ListResponse")]
        System.Data.DataTable List(string username, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/List", ReplyAction="http://tempuri.org/IMCSService/ListResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> ListAsync(string username, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Upload", ReplyAction="http://tempuri.org/IMCSService/UploadResponse")]
        void Upload(string username, MyCloudStoreApp.MCSService.StoredFile f, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Upload", ReplyAction="http://tempuri.org/IMCSService/UploadResponse")]
        System.Threading.Tasks.Task UploadAsync(string username, MyCloudStoreApp.MCSService.StoredFile f, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Download", ReplyAction="http://tempuri.org/IMCSService/DownloadResponse")]
        MyCloudStoreApp.MCSService.StoredFile Download(string username, string filename, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Download", ReplyAction="http://tempuri.org/IMCSService/DownloadResponse")]
        System.Threading.Tasks.Task<MyCloudStoreApp.MCSService.StoredFile> DownloadAsync(string username, string filename, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Delete", ReplyAction="http://tempuri.org/IMCSService/DeleteResponse")]
        void Delete(string username, string token, string filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Delete", ReplyAction="http://tempuri.org/IMCSService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(string username, string token, string filename);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMCSServiceChannel : MyCloudStoreApp.MCSService.IMCSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MCSServiceClient : System.ServiceModel.ClientBase<MyCloudStoreApp.MCSService.IMCSService>, MyCloudStoreApp.MCSService.IMCSService {
        
        public MCSServiceClient() {
        }
        
        public MCSServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MCSServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MCSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MCSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Register(string username, string password) {
            base.Channel.Register(username, password);
        }
        
        public System.Threading.Tasks.Task RegisterAsync(string username, string password) {
            return base.Channel.RegisterAsync(username, password);
        }
        
        public string LogIn(string username, string password) {
            return base.Channel.LogIn(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LogInAsync(string username, string password) {
            return base.Channel.LogInAsync(username, password);
        }
        
        public System.Data.DataTable List(string username, string token) {
            return base.Channel.List(username, token);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ListAsync(string username, string token) {
            return base.Channel.ListAsync(username, token);
        }
        
        public void Upload(string username, MyCloudStoreApp.MCSService.StoredFile f, string token) {
            base.Channel.Upload(username, f, token);
        }
        
        public System.Threading.Tasks.Task UploadAsync(string username, MyCloudStoreApp.MCSService.StoredFile f, string token) {
            return base.Channel.UploadAsync(username, f, token);
        }
        
        public MyCloudStoreApp.MCSService.StoredFile Download(string username, string filename, string token) {
            return base.Channel.Download(username, filename, token);
        }
        
        public System.Threading.Tasks.Task<MyCloudStoreApp.MCSService.StoredFile> DownloadAsync(string username, string filename, string token) {
            return base.Channel.DownloadAsync(username, filename, token);
        }
        
        public void Delete(string username, string token, string filename) {
            base.Channel.Delete(username, token, filename);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string username, string token, string filename) {
            return base.Channel.DeleteAsync(username, token, filename);
        }
    }
}
