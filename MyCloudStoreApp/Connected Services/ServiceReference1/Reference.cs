//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyCloudStoreApp.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMCSService")]
    public interface IMCSService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/List", ReplyAction="http://tempuri.org/IMCSService/ListResponse")]
        string List(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/List", ReplyAction="http://tempuri.org/IMCSService/ListResponse")]
        System.Threading.Tasks.Task<string> ListAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Upload", ReplyAction="http://tempuri.org/IMCSService/UploadResponse")]
        int Upload(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Upload", ReplyAction="http://tempuri.org/IMCSService/UploadResponse")]
        System.Threading.Tasks.Task<int> UploadAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Download", ReplyAction="http://tempuri.org/IMCSService/DownloadResponse")]
        byte[] Download(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMCSService/Download", ReplyAction="http://tempuri.org/IMCSService/DownloadResponse")]
        System.Threading.Tasks.Task<byte[]> DownloadAsync(System.IO.Stream stream);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMCSServiceChannel : MyCloudStoreApp.ServiceReference1.IMCSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MCSServiceClient : System.ServiceModel.ClientBase<MyCloudStoreApp.ServiceReference1.IMCSService>, MyCloudStoreApp.ServiceReference1.IMCSService {
        
        public MCSServiceClient() {
        }
        
        public MCSServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MCSServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MCSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MCSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string List(string name) {
            return base.Channel.List(name);
        }
        
        public System.Threading.Tasks.Task<string> ListAsync(string name) {
            return base.Channel.ListAsync(name);
        }
        
        public int Upload(System.IO.Stream stream) {
            return base.Channel.Upload(stream);
        }
        
        public System.Threading.Tasks.Task<int> UploadAsync(System.IO.Stream stream) {
            return base.Channel.UploadAsync(stream);
        }
        
        public byte[] Download(System.IO.Stream stream) {
            return base.Channel.Download(stream);
        }
        
        public System.Threading.Tasks.Task<byte[]> DownloadAsync(System.IO.Stream stream) {
            return base.Channel.DownloadAsync(stream);
        }
    }
}
